// Generated by Dagger (https://dagger.dev).
package com.newproject.user.data.repository.auth;

import com.newproject.user.network.auth.AuthApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthRepository_Factory implements Factory<AuthRepository> {
  private final Provider<AuthApi> authApiProvider;

  public AuthRepository_Factory(Provider<AuthApi> authApiProvider) {
    this.authApiProvider = authApiProvider;
  }

  @Override
  public AuthRepository get() {
    return newInstance(authApiProvider.get());
  }

  public static AuthRepository_Factory create(Provider<AuthApi> authApiProvider) {
    return new AuthRepository_Factory(authApiProvider);
  }

  public static AuthRepository newInstance(AuthApi authApi) {
    return new AuthRepository(authApi);
  }
}
