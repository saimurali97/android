// Generated by Dagger (https://dagger.dev).
package com.newproject.user.view.ui.splash;

import com.newproject.user.data.model.local.Preferenceshandler;
import com.newproject.user.data.model.local.UserSession;
import com.newproject.user.data.repository.auth.AuthRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SplashViewModel_Factory implements Factory<SplashViewModel> {
  private final Provider<AuthRepository> authRepositoryProvider;

  private final Provider<Preferenceshandler> preferenceshandlerProvider;

  private final Provider<UserSession> userSessionProvider;

  private final Provider<String> noInternetStringProvider;

  public SplashViewModel_Factory(Provider<AuthRepository> authRepositoryProvider,
      Provider<Preferenceshandler> preferenceshandlerProvider,
      Provider<UserSession> userSessionProvider, Provider<String> noInternetStringProvider) {
    this.authRepositoryProvider = authRepositoryProvider;
    this.preferenceshandlerProvider = preferenceshandlerProvider;
    this.userSessionProvider = userSessionProvider;
    this.noInternetStringProvider = noInternetStringProvider;
  }

  @Override
  public SplashViewModel get() {
    return newInstance(authRepositoryProvider.get(), preferenceshandlerProvider.get(), userSessionProvider.get(), noInternetStringProvider.get());
  }

  public static SplashViewModel_Factory create(Provider<AuthRepository> authRepositoryProvider,
      Provider<Preferenceshandler> preferenceshandlerProvider,
      Provider<UserSession> userSessionProvider, Provider<String> noInternetStringProvider) {
    return new SplashViewModel_Factory(authRepositoryProvider, preferenceshandlerProvider, userSessionProvider, noInternetStringProvider);
  }

  public static SplashViewModel newInstance(AuthRepository authRepository,
      Preferenceshandler preferenceshandler, UserSession userSession, String noInternetString) {
    return new SplashViewModel(authRepository, preferenceshandler, userSession, noInternetString);
  }
}
